function selectDayFromCurrent(day){
      
    let date = new Date()
    date.setDate(date.getDate() + day)
    let futureDay = date.getDate()
    console.log(futureDay)
    let futureMonth = date.toLocaleString('en-us', {month: 'short'})
    let dateAssert = futureMonth+' '+futureDay+', '+date.getFullYear()

    cy.get('nb-calendar-navigation').invoke('attr', 'ng-reflect-date').then( dateAttribute => {
        if( !dateAttribute.includes(futureMonth)){
            cy.get('[data-name="chevron-right"]').click()
            selectDayFromCurrent(day)
        } else {
            cy.get('.day-cell').not('.bounding-month').contains(futureDay).click()
        }
    }) 
    return dateAssert   
}

export class DatepickerPage{

    selectTomorrowDateInCalendar(dayFromToday){
        

        cy.contains('nb-card', 'Common Datepicker').find('[placeholder="Form Picker"]').then( input => {
            cy.wrap(input).click()
            let dateAssert = selectDayFromCurrent(dayFromToday)  
            cy.wrap(input).invoke('prop', 'value').should('contain', dateAssert)
        })
    }

    selectDatepickerWithRangeFromToday(startOfRange, endOfRange){

        cy.contains('nb-card', 'Datepicker With Range').find('[placeholder="Range Picker"]').then( input => {
            cy.wrap(input).click()
            let dateAssertStart = selectDayFromCurrent(startOfRange)
            let dateAssertEnd = selectDayFromCurrent(endOfRange)
            const finalDate = dateAssertStart+' - '+dateAssertEnd
            cy.wrap(input).invoke('prop', 'value').should('contain', finalDate)
        })
    }
 
        
}

export const onDatepickerPage = new DatepickerPage()